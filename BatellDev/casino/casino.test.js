import {ContestResponse} from "./casino.js"
import { describe } from "mocha"
import { assert, expect } from "chai";

describe("Lose In Casino",function(){
    describe("Tests with short and normal length of array.", function(){
        it("should return -3 for a small input.", function(){
            const input = [1,-3];
            expect(ContestResponse(input)).to.be.eq(-3);
        });
        it("should return -25 for a small input.", function(){
            const input = [4,-15,-5,5,-10];
            expect(ContestResponse(input)).to.be.eq(-25);
        });
        it("should return -31 for e medium input.", function(){
            const input = [5,-13,2,-15,-5,14];
            expect(ContestResponse(input)).to.be.eq(-31);
        });
        it("should return -32 for a medium input", function(){
            const input = [10,-28,19,16,2,-2,-24,-6,24,-2,20];
            expect(ContestResponse(input)).to.be.eq(-32);
        });
    })

    describe("Tests with long length of array.", function(){
        it("should return -633 forin a big input.",function(){
            const input = [50,-135,-94,25,-25,20,121,62,5,-66,-133,50,-59,-30,137,-132,89,68,130,-63,95,18,75,68,16,-82,92,22,40,-113,19,61,68,-124,56,-96,24,-131,-16,48,11,-58,2,56,-15,-125,-44,-102,-42,-77,69];
            assert.strictEqual(ContestResponse(input), -633);
        });
        it("should return -1390 for a big input.",function(){
            const input = [100,162,143,169,54,37,-104,89,-92,-215,37,179,-167,54,9,-213,169,283,209,56,286,-223,26,-231,-74,-167,25,248,-59,286,277,211,65,261,207,-102,-7,124,-253,-154,-281,211,-239,-113,43,33,-225,41,300,-166,159,-166,247,-268,289,283,-169,-62,-251,213,88,-219,86,-179,-87,-189,122,219,-152,265,-130,47,-91,-205,-160,258,-152,-256,270,75,-174,-298,248,-126,212,-20,87,-67,216,204,136,148,137,120,50,2,-122,88,182,92,-21];
            assert.strictEqual(ContestResponse(input), -1390);
        });
        it("should return -65489 in a 1001 elements array.",function(){
            const input = [1000,-924,1470,-2402,264,-2763,-65,-354,2708,2233,-1746,1051,130,881,2621,661,490,-77,2733,2874,-2834,781,-208,-2973,1779,-1542,2712,-2533,2432,25,-109,1301,2746,-2496,-1775,-581,-1587,-1639,-90,1252,-525,2563,1490,1076,1025,984,-269,2807,2390,368,-1354,1680,959,-2928,-161,-2750,2446,2498,-759,599,1382,1465,-502,754,1566,-2555,-438,-967,179,2481,-641,-435,1417,-2927,-2524,644,1259,-410,-1968,-1782,-2393,274,-1522,-2946,1218,-719,2967,803,-2769,-2540,17,743,-705,621,2859,-2730,1158,2723,-772,395,-1965,2631,92,2509,-2824,365,1736,-1150,1995,-1621,-1483,-1255,2193,1499,-188,244,524,-1969,355,2351,2477,-2279,1989,1562,-778,-2327,-41,-719,895,2221,-2595,-2006,2045,2911,1846,2543,2046,2813,-2134,856,-2683,2070,-2433,-2868,439,1184,689,-1688,-1465,2690,-1964,-534,86,2873,-267,-1518,606,433,2013,-1088,-1533,-772,-1238,-1091,2752,206,-2827,-1852,-2460,-2511,-1280,1559,-1218,2119,-2446,192,-1133,793,1619,2145,-2585,1083,231,1665,2519,-801,-1631,-1002,-2254,474,-1755,-2317,-1158,-1162,-2713,1520,1364,968,-1383,804,1702,-1681,1571,990,1374,-2101,-1113,-1897,181,1357,-2607,2689,2601,2664,-545,-2752,225,-2099,1324,171,2724,2478,-731,-485,-1984,-2774,559,2350,818,-1034,1842,-2165,1676,585,-1243,-841,1860,-1075,2306,-391,1519,106,-1526,2925,-2478,1945,-2717,2920,-1949,2380,1641,-1387,2619,1358,2490,-2601,1712,2409,-581,-1511,827,-1496,-1026,897,97,1901,-618,911,320,-460,-2886,2492,2638,-2977,898,1872,1123,-2628,2884,129,127,-1396,-199,-1692,-1064,-2252,-1967,2889,-1181,-816,-2727,2491,322,1986,93,-1162,-1287,2186,-1484,969,650,-2863,-1826,-1610,-965,1939,2299,1116,-2333,73,718,1817,2769,-2687,-1706,2414,-1672,1843,-389,-1687,2025,-2536,2530,2767,-2498,2922,854,-1061,-2977,-2818,-1888,1845,337,402,-2131,814,-201,458,-2828,1864,2164,-1311,-435,-436,-131,2344,-2269,-1345,-50,-1247,853,-1101,-1034,-1476,-1744,55,-2553,1534,73,896,-977,-2004,2438,1352,2439,1514,-1119,1029,965,2597,-1238,378,2275,-156,-1929,-1110,111,134,-2843,352,2260,547,-2310,-158,-1553,-1000,1040,-2681,-2672,-963,1319,2735,-1357,-905,-450,-2487,116,-1252,-2466,-1050,-2102,2825,1787,-2802,-1096,2905,634,456,-690,2247,2647,-2763,-1803,2962,-1053,-2082,-1545,748,2570,2774,-506,2897,-200,2026,-1410,2263,-250,958,-593,-2631,-2645,-397,-898,2156,2588,1478,-550,116,-368,2985,-1977,-2055,-1779,2489,2096,-659,-2912,-1315,-1408,-2706,-1997,2252,2850,-511,-48,-2506,-101,-570,770,832,-1929,979,-1229,1037,2879,-2827,-760,-158,143,-954,2782,-752,2024,957,907,-490,-2720,2681,-2107,-819,1124,-2909,-1860,-2632,-2264,-356,-238,1580,2164,-1602,536,-963,-2370,2351,896,-2663,1446,-1424,2314,-49,-2185,2085,-2318,-2152,-1214,819,247,660,-2126,-1018,-1568,-1695,-2548,1098,-658,-1129,234,-276,-183,680,-2922,2191,-1432,-984,-913,919,-687,2382,-809,-625,1036,2384,-2888,2035,396,-911,-1228,-1866,2129,-2277,2793,2989,2332,-2186,373,-1220,-691,-788,867,-2968,2969,2285,1839,-1597,-2119,-2177,-2111,2162,855,2047,2069,2472,1817,-2889,-2337,-2246,907,1819,-341,2795,213,-1617,-2257,-2738,-1966,-2306,2066,1199,550,-1720,-97,692,2229,-123,-1621,-2654,2848,903,603,1709,-1682,2656,-1363,-392,-282,-2975,1473,1044,-1943,-1464,292,-1893,-2753,-2947,-2168,1180,793,-162,1958,2953,2327,2464,1380,-2812,690,-2053,1549,1031,-870,2623,1869,2044,2461,-777,-2928,-2667,1991,2808,1857,-1864,-178,-2413,-5,2053,-120,-1498,1975,2121,1012,269,2497,2415,-2291,-1969,-1251,-983,1677,-662,-477,394,1975,616,-1254,-2870,-592,79,1109,-333,-938,-2099,1702,-2885,457,1535,195,-1395,701,613,2040,60,-2834,1219,-155,-466,1411,1620,2626,601,1457,2946,2662,2828,-2972,1851,-2040,-165,340,-1987,439,-1413,1440,1113,-805,2089,931,-949,2521,1734,1283,-2815,1799,-800,-276,2747,2784,-417,2426,475,200,-2595,-1486,29,1350,2992,-2689,-113,803,-1688,2686,-1563,-1159,-1738,1290,-2115,-462,-299,378,118,-381,-2823,1464,-6,-146,183,-2884,416,1481,1655,-2090,374,-2957,-1458,1163,1376,-1102,-1597,920,1324,1013,1127,1259,1756,-1966,1583,2910,-2441,2084,-2287,-829,2756,-1012,-1093,1703,-1342,51,-1130,-2808,2442,1874,-232,197,593,-1047,-812,2311,2308,2026,-1279,-1443,-1356,1028,-1841,2635,-597,-1996,-2219,-2726,1744,574,-1870,2011,-2579,-2149,-623,2933,1693,-326,42,-1219,-2801,762,-2763,-1615,1326,2628,1977,369,-1431,1338,-736,-1716,-1974,1094,1141,-2485,-578,-710,2418,-460,1116,-195,-2279,2999,28,-2125,-2405,-686,1797,820,-2391,722,-1085,53,-1759,-1080,-934,2499,-1938,-1711,-1399,-2883,1169,1067,2078,793,529,-1286,-2180,-649,645,-1012,-2567,-1487,-2895,1062,79,906,-2879,-2137,1792,-2699,-2209,45,19,830,-1599,-575,-721,723,-1941,-1454,2635,2109,2841,-2394,597,-2338,-2226,-2866,-27,2454,1342,1447,-1742,-2069,404,1611,-242,469,2152,-565,-1089,32,1008,-2962,-2116,-14,1068,-1539,-472,157,-1036,2364,1494,2820,2041,-557,-1441,1117,-2775,-96,-2942,2701,899,739,-772,2470,767,806,-212,-2824,2080,1989,1643,-729,1531,-251,111,2378,554,-2381,186,1396,-607,-1039,-752,1490,-452,-297,-774,-2698,-1897,-2521,14,-1263,-2808,1290,2062,-1282,-1228,-1184,531,933,762,1166,-2696,2983,196,2984,-1750,-1805,-1726,1205,570,-30,-2591,802,-1881,-698,-2740,2656,2937,689,-982,-2165,1427,-1618,128,-1323,1987,1007,-2528,-2457,1456,908,470,2305,-1889,-1832,1,-2962,1863,1546,106,861,-2281,2864,-1428,-777,-827,-370];
            assert.strictEqual(ContestResponse(input), -65489);
        });
    })

    describe("Tests with positive values.", function(){
        it("should return 0 for a small input with positif values", function(){
            const input = [1,3];
            expect(ContestResponse(input)).to.be.eq(0);
        })

        it("should return 0 when all the values in the input are positive or nul.", function(){
            const input = [10,0,8,2];
            expect(ContestResponse(input)).to.be.eq(0);
        });
    })
   
})
